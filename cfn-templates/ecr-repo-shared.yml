AWSTemplateFormatVersion: '2010-09-09'
Description: Creates an ECR repository with cross-account access.
Parameters: 
    StackName:
      Type: String
      Default: developer-user-group
      Description: The name of the CloudFormation stack that contains the Development Group and User.
    RepoName:
      Type: String
      Default: rake-app
      Description: The name of the ECR repository.
    CustomerAccount:
      Type: Number
      Description: Your second AWS Account (pseudo Customer Account).
Resources:
  Repository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref RepoName
      RepositoryPolicyText:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
              AWS:
                Fn::ImportValue:
                  !Join [':', [!Ref 'StackName', 'DevUserArn']]
            Action:
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:BatchGetImage'
              - 'ecr:CompleteLayerUpload'
              - 'ecr:DescribeImages'
              - 'ecr:DescribeRepositories'
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:GetRepositoryPolicy'
              - 'ecr:InitiateLayerUpload'
              - 'ecr:ListImages'
              - 'ecr:PutImage'
              - 'ecr:UploadLayerPart'
          - Sid: AllowPull
            Effect: Allow
            Principal:
              AWS: !Join [':', ['arn:aws:iam:', !Ref 'CustomerAccount', 'root']]
            Action:
              - 'ecr:GetAuthorizationToken'
              - 'ecr:BatchCheckLayerAvailability'
              - 'ecr:GetDownloadUrlForLayer'
              - 'ecr:BatchGetImage'
              - 'ecr:DescribeRepositories' # optional permission
              - 'ecr:DescribeImages' # optional permission
      LifecyclePolicy:
        LifecyclePolicyText: !Sub
          - |
            {
              "rules": [
                {
                  "rulePriority": 1,
                  "description": "Only keep untagged images for ${DaysToRetainUntaggedContainerImages} days",
                  "selection": {
                    "tagStatus": "untagged",
                    "countType": "sinceImagePushed",
                    "countUnit": "days",
                    "countNumber": ${DaysToRetainUntaggedContainerImages}
                  },
                  "action": { "type": "expire" }
                },
                {
                  "rulePriority": 2,
                  "description": "Keep only ${MaxTaggedContainerImagesToRetain} tagged images, expire all others",
                  "selection": {
                    "tagStatus": "tagged",
                    "tagPrefixList": [ "1" ],
                    "countType": "imageCountMoreThan",
                    "countNumber": ${MaxTaggedContainerImagesToRetain}
                  },
                  "action": { "type": "expire" }
                }
              ]
            }
          - DaysToRetainUntaggedContainerImages: 1
            MaxTaggedContainerImagesToRetain: 3